import Head from 'next/head'
import { Box, Button, Card, CardContent, CircularProgress, Container, Fab, Grid, Stack, Typography } from '@mui/material'
import styles from '../styles/Home.module.css'
import AddIcon from '@mui/icons-material/Add';
import NorthIcon from '@mui/icons-material/North';
import SouthIcon from '@mui/icons-material/South';
import FormDialog from '@/components/FormDialog';
import { useEffect, useRef, useState } from 'react';
import { useRecoilValue } from 'recoil';
import { budgetAtom } from '@/recoil/atom/budgetAtom';
import { transactionAtom } from '@/recoil/atom/transactionAtom';

const CardComponent = ({total_balance}) => {
  return (
    <Card className={styles.card}>
        <CardContent>
            <Typography variant="body2" children="Total Balance" />
            <Typography variant='h4' mt={1}>Rp {total_balance}</Typography>
        </CardContent>
    </Card>
  )
}

const BudgetComponent = ({ icon, title}) => {
    const [loading, setLoading] = useState(false);
    const [success, setSuccess] = useState(false);
    const timer = useRef();
    const handleButtonClick = () => {
        if (!loading) {
          setSuccess(false);
          setLoading(true);
          timer.current = window.setTimeout(() => {
            setSuccess(true);
            setLoading(false);
          }, 2000);
        }
      }
    return (
        <Box className={styles.budgets}>
            <Box sx={{ m: 1, mt: 2, position: 'relative' }}>
                <Box
                sx={{bgcolor: "transparent"}}
                onClick={handleButtonClick}>
                <Typography variant='h4'>{icon}</Typography>
                </Box>
                <CircularProgress
                size={60}
                    variant="determinate" value={90}
                    sx={{
                    position: 'absolute',
                    top: -10,
                    left: -7,
                    zIndex: 1,
                    }}
                />
            </Box>
            <Typography mt={1} variant='body2'>{title}</Typography>
        </Box>
    )
}


const HistoryComponent= ({type, category, title, budget, date})=> {
    return (
        <Grid 
            container 
            py="16px"
            alignItems="center"
            className={styles.historyCard}
        >
            <Grid item xs={3} textAlign="center">
                <Typography variant='h4'>{category}</Typography>
            </Grid>
            <Grid item xs={4}>
                <Typography>{title}</Typography>
                <Typography variant='body2'>{date}</Typography>
            </Grid>
            <Grid item xs={3}>
                <Typography variant='h6'>{budget}</Typography>
            </Grid>
            <Grid item xs={2} textAlign="center">
                <Typography>
                    {
                        type === 'outcome' ? 
                        <NorthIcon color='error' /> : 
                        <SouthIcon color='success' />
                    }
                </Typography>
            </Grid>
        </Grid>
    )
}

export default function Home() {
    const budgetList = useRecoilValue(budgetAtom)
    const transactionList = useRecoilValue(transactionAtom)
    const [ open, setOpen ] = useState(false)
    const [transactionData, setTransactionData] = useState([])
    const [budgetData, setBudgetData] = useState([])

    const handleClickOpen = () => setOpen(true);
    const handleClose = () => setOpen(false);

    const dummyBudget = [
        {icon: '🚗', title: 'Transport', id: 1},
        {icon: '🍔', title: 'Food', id: 2},
        {icon: '💻', title: 'PC', id: 3},
        {icon: '👚', title: 'Apparel', id: 3},
    ]

    const getStoredItem = () => {
        const serializedBudget = localStorage.getItem('budgetList');
        const serializedTransaction = localStorage.getItem('transactionList');
        setTransactionData(JSON.parse(serializedTransaction))
        setBudgetData(JSON.parse(serializedBudget))
    }

    useEffect(() => {
        getStoredItem()
    }, [])

    return (
        <>
            <Head>
                <title>Home | Cuan</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Container sx={{mb: 10}}>
                {console.log(budgetData, transactionData)}
                <Box>
                    <Typography variant='body2' children="Good Morning," />
                    <Typography variant='h6' children="Khairunnisa" />
                </Box>
                <CardComponent total_balance={"1.000.000"} />
                <Box py={2} sx={{overflowX: "scroll"}}>
                    <Typography variant='h6' children="Budgets" />
                    <Stack mt={2} direction="row" spacing={2}>
                        {
                            budgetList.map(budget => (
                                <BudgetComponent icon={budget.icon} title={budget.label} key={budget.name} />
                            ))
                        }
                        <Box>
                            <Button onClick={handleClickOpen} className={styles.newBudget}>
                                <Typography variant='h4'><AddIcon /></Typography>
                                <Typography variant="body2" mt={1} textAlign='center' width="9ch">Add new Budget</Typography>
                            </Button>
                        </Box>
                        <FormDialog open={open} onClose={handleClose} />
                    </Stack>
                </Box>
                <Box py={2}>
                    <Typography variant='h6' children="History" />
                    <HistoryComponent  
                        category='🍔' 
                        type='outcome' 
                        title="sushi"
                        date="24-2-2023"
                        budget="50.000" 
                    />
                    <HistoryComponent  
                        category='🍔' 
                        type='income' 
                        title="sushi"
                        date="24-2-2023"
                        budget="50.000" 
                    />
                    <HistoryComponent  
                        category='🍔' 
                        type='outcome' 
                        title="sushi"
                        date="24-2-2023"
                        budget="50.000" 
                    />
                </Box>
            </Container>
        </>
    )
}
